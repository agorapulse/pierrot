/*
 * SPDX-License-Identifier: Apache-2.0
 *
 * Copyright 2021 Vladimir Orany.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import org.jsoup.Jsoup

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.jsoup:jsoup:1.14.3'
    }
}

plugins {
    id 'org.kordamp.gradle.guide'
    id 'org.ajoberstar.git-publish'
}

config {
    docs {
        guide {
            publish {
                enabled = true
            }
        }
    }
}

configurations {
    asciidoctorExtensions
}

dependencies {
    asciidoctorExtensions 'com.bmuschko:asciidoctorj-tabbed-code-extension:0.3'
}

asciidoctor {
    configurations 'asciidoctorExtensions'

    baseDirFollowsSourceDir()

    attributes = [
        'gradle-version': project.gradle.gradleVersion,
        'source-highlighter': 'prettify',
        'root-dir': rootDir,
        'project-slug': slug
    ]

}

tasks.register('html2text') { Task task ->
    File indexFile = new File(createGuide.destinationDir, 'index.html')
    File outputFile = new File(project.buildDir, 'html2text/README')

    task.dependsOn(createGuide)
    task.group('documentation')
    task.inputs.file(indexFile)
    task.outputs.file(outputFile)

    task.doFirst {
        String text = Jsoup.parse(indexFile, 'UTF-8')
            // the whole text containing line breaks
            .wholeText()
            // reduce line-breaks to the maximum of two
            .replaceAll(/(\n\n)(\n+)/, /$1/)
            // remove extra whitespace at the beginning and at the end
            .trim()
            // remove the duplicate heading
            .replaceFirst(/.*\n/, '')
            // clean up the extra whitespaces again
            .trim()

        outputFile.parentFile.mkdirs()
        outputFile.text = text
    }
}
