name: GraalVM Snapshot
on:
  push:
    tags-ignore:
      - '*'
    branches:
      - '*'
  pull_request:
jobs:
  build:
    name: 'Build with Graal on ${{ matrix.os }}'
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        gu-binary: [ gu, gu.cmd ]
        exclude:
          - os: ubuntu-latest
            gu-binary: gu.cmd
          - os: macos-latest
            gu-binary: gu.cmd
          - os: windows-latest
            gu-binary: gu
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: 'Add Developer Command Prompt for Microsoft Visual C++ '
        if: ${{ runner.os == 'Windows' }}
        uses: ilammy/msvc-dev-cmd@v1
      - name: Setup GraalVM CE
        uses: DeLaGuardo/setup-graalvm@3.1
        with:
          graalvm-version: 22.3.0.java11
      - name: Install Native Image
        run: ${{ matrix.gu-binary }} install native-image
      - uses: gradle/gradle-command-action@v2
        with:
          arguments: :pierrot:nativeDistZip
      - uses: actions/upload-artifact@v2
        with:
          name: pierrot-${{ matrix.os }}.zip
          path: apps/pierrot/build/distributions/pierrot-*.zip
      - name: Verify Binary
        if: ${{ runner.os == 'Linux' || runner.os == 'macOS'}}
        env:
          GITHUB_TOKEN: ${{ secrets.AGORAPULSE_BOT_PERSONAL_TOKEN }}
          GITHUB_ORG: agorapulse
        run: |
          cd apps/pierrot/build/native/nativeCompile
          ./pierrot search repo:agorapulse/pierrot filename:.testfile
          ./pierrot status repo:agorapulse/pierrot author:musketyr
          ./pierrot init -b chore/testbranch -t "Test Title" -m "Test Message" --project "Test Project" --workspace testws
          cd testws
          cat pierrot.yml
          grep -q branch pierrot.yml
          grep -q testbranch pierrot.yml
          grep -q title pierrot.yml
          grep -q message pierrot.yml
          grep -q project pierrot.yml
          cd ..
          ./pierrot push --workspace testws
      - name: Docker login (master and Linux only)
        if: github.ref == 'refs/heads/master' && runner.os == 'Linux'
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.DOCKER_REGISTRY_URL }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build And Push Docker Image Snapshot (master and Linux only)
        if: github.ref == 'refs/heads/master' && runner.os == 'Linux'
        env:
          DOCKER_REPOSITORY_PATH: ${{ secrets.DOCKER_REPOSITORY_PATH }}
          DOCKER_REGISTRY_URL: ${{ secrets.DOCKER_REGISTRY_URL }}
        run: |
          export DOCKER_IMAGE=`echo "${DOCKER_REGISTRY_URL}/${DOCKER_REPOSITORY_PATH}/pierrot" | sed -e 's#//#/#' -e 's#^/##'`
          ./gradlew :pierrot:dockerPushNative
