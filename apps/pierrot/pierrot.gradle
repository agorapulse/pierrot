/*
 * SPDX-License-Identifier: Apache-2.0
 *
 * Copyright 2021 Vladimir Orany.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
plugins {
    id 'io.sdkman.vendors' version '3.0.0'
}

micronaut {
    testRuntime('spock2')
    processing {
        incremental(true)
        annotations('com.agorapulse.pierrot.*')
    }
}

dependencies {
    implementation project(':pierrot-api')
    implementation project(':pierrot-hub4j')

    annotationProcessor('io.micronaut:micronaut-graal')
    annotationProcessor('info.picocli:picocli-codegen')
    implementation('info.picocli:picocli')
    implementation('io.micronaut:micronaut-runtime')
    implementation('io.micronaut.picocli:micronaut-picocli')
    implementation('javax.annotation:javax.annotation-api')
    runtimeOnly('ch.qos.logback:logback-classic')
    compileOnly('org.graalvm.nativeimage:svm')

    implementation('io.micronaut:micronaut-validation')

    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml'

    testImplementation('io.micronaut:micronaut-http-client')
    testImplementation('com.agorapulse.testing:fixt:0.2.2')
}


application {
    mainClass.set('com.agorapulse.pierrot.cli.PierrotCommand')
}

dockerBuild {
    images = ["${System.env.DOCKER_IMAGE ?: project.name}:$project.version"]
}

dockerBuildNative {
    images = [
        "${System.env.DOCKER_IMAGE ?: project.name}:$project.version",
        "${System.env.DOCKER_IMAGE ?: project.name}:latest",
    ]
}

dockerfileNative {
    baseImage('gcr.io/distroless/cc-debian10')
}

sdkman {
    candidate = 'pierrot'
    version =  project.version
    platforms = [
        MAC_OSX: "https://github.com/agorapulse/pierrot/releases/download/${project.version}/pierrot-darwin-amd64-v${project.version}.zip",
        WINDOWS_64: "https://github.com/agorapulse/pierrot/releases/download/${project.version}/pierrot-windows-amd64-v${project.version}.zip",
        LINUX_64: "https://github.com/agorapulse/pierrot/releases/download/${project.version}/pierrot-linux-amd64-v${project.version}.zip",
    ]
    hashtag = 'PierrotCLI'
}

